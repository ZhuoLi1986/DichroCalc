#!/usr/bin/perl -w

####################################################################################################
#
# Program:    extrema
#
# Function:   Determines the minima, maxima and zero crossings of a spectrum
#
# Author:     Benjamin Bulheller
#
# Version:    $Revision: 4181 $, $Date: 2009-03-28 21:15:14 +0000 (Sat, 28 Mar 2009) $
#
# Date:       February 2004
#
####################################################################################################

use strict;                          # always use this!!!
use Data::Dumper;                    # for easy printout of arrays and hashes
use FindBin qw/$Bin/;                # sets $Bin to the directory of the script
use lib $Bin;                        # add the script's directory to the library path
use lib "$ENV{HOME}/bin/perllib/";   # adds ~/bin/perllib to the library path
use DebugPrint;                      # handy during debugging
use ReadSpectrum;                    # for reading in xy data

my (@Content, @Columns, @xValue, @yValue, $i, $File);

my $TotalMax = 0;

if (scalar @ARGV == 0) {
	print STDERR "\nUsage:   extrema file1 [file2] [...]\n\n";
	exit 1;
}
 
while (@ARGV) {
	$File = shift;
	@Content = ReadSpectrum ($File);
	
	if (not @Content) { next }

	print "$File\n\n";

	$TotalMax = 0;
	
	for $i (1 .. $#Content-1) {
		if ( ($Content[$i-1]->[1] < $Content[$i]->[1] ) and ( $Content[$i]->[1] > $Content[$i+1]->[1] ) ) {
			printf "maxmimum     %6.2f    %8.2f\n", $Content[$i]->[0], $Content[$i]->[1];
		}
		elsif ( ($Content[$i-1]->[1] > $Content[$i]->[1] ) and ( $Content[$i]->[1] < $Content[$i+1]->[1] ) ) {
			printf "minimum      %6.2f    %8.2f\n", $Content[$i]->[0], $Content[$i]->[1];
		}
		elsif ( ($Content[$i-1]->[1] < 0) and ( 0 < $Content[$i]->[1] ) ) {
			printf "zero         %6.2f    %8.2f\n", $Content[$i]->[0], $Content[$i]->[1];
		}
		elsif ( (0 < $Content[$i]->[1]) and ( $Content[$i+1]->[1] < 0) ) {
			printf "zero         %6.2f    %8.2f\n", $Content[$i]->[0], $Content[$i]->[1];
		}
	}

	print "\n\n";
}
